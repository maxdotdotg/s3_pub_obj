#!/usr/bin/env python2

"""
find all public objects in a given s3 bucket
return the key of that object
"""

import argparse
import boto3
from botocore.exceptions import ClientError
import sys


parser = argparse.ArgumentParser()
parser.add_argument("bucket", help="s3 bucket to check", type=str)
args = parser.parse_args()

s3_client = boto3.client('s3')

# create iterator
paginator = s3_client.get_paginator('list_objects')
page_iterator = paginator.paginate(Bucket=args.bucket)

# check for bucket policy. If public, print all keys and exit
try:
    bucket_policy = s3_client.get_bucket_policy_status(Bucket=args.bucket)
    if bucket_policy['PolicyStatus']['IsPublic']:
        print "PLEASE BE AWARE! BUCKET IS PUBLIC!"
        for page in page_iterator:
            for obj in page['Contents']:
                print obj['Key']
        sys.exit(0)
except ClientError as e:
    if "The bucket policy does not exist" in e:
        pass

# check the acl to see if the object is public: "AllUsers" in the ACL
# if so, print the object's key
for page in page_iterator:
    for obj in page['Contents']:
        acl = s3_client.get_object_acl(Bucket=args.bucket,Key=obj['Key'])
        if "AllUsers" in str(acl.values()):
            print obj['Key']

